import streamlit as st
import pandas as pd
import os
from email_notifications import correo_registro

# Archivo donde se almacenan los usuarios (simulaci√≥n de base de datos)
USERS_FILE = "usuarios.csv"

# Cargar usuarios desde archivo CSV
def cargar_usuarios():
    if os.path.exists(USERS_FILE):
        return pd.read_csv(USERS_FILE)
    return pd.DataFrame(columns=["nombre", "email"])

# Guardar un nuevo usuario
def guardar_usuario(nombre, email):
    df = cargar_usuarios()
    if email in df["email"].values:
        return False  # El usuario ya existe
    nuevo_usuario = pd.DataFrame([[nombre, email]], columns=df.columns)
    df = pd.concat([df, nuevo_usuario], ignore_index=True)
    df.to_csv(USERS_FILE, index=False)
    return True

# Verificar si un usuario est√° registrado
def usuario_existe(email):
    df = cargar_usuarios()
    return email in df["email"].values

# Configurar la sesi√≥n
if "user" not in st.session_state:
    st.session_state["user"] = None
    st.session_state["user_email"] = None

# T√≠tulo de la p√°gina
st.title("üîë Autenticaci√≥n")

# Opciones de autenticaci√≥n
modo = st.radio("Selecciona una opci√≥n", ["Registrarse", "Iniciar sesi√≥n"])

# Secci√≥n de registro
if modo == "Registrarse":
    st.subheader("üìù Registro de Usuario")
    nombre = st.text_input("Nombre")
    email = st.text_input("Correo electr√≥nico")

    if st.button("Registrarse"):
        if nombre and email:
            if usuario_existe(email):
                st.warning("‚ùå Este correo ya est√° registrado. Intenta iniciar sesi√≥n.")
            else:
                guardar_usuario(nombre, email)
                correo_registro(email, nombre)  # Enviar correo de bienvenida
                st.success("‚úÖ Registro exitoso. Revisa tu correo.")
        else:
            st.error("‚ö†Ô∏è Completa todos los campos.")

# Secci√≥n de inicio de sesi√≥n
if modo == "Iniciar sesi√≥n":
    st.subheader("üîì Iniciar Sesi√≥n")
    email_login = st.text_input("Correo electr√≥nico")

    if st.button("Ingresar"):
        if usuario_existe(email_login):
            st.session_state["user_email"] = email_login
            st.session_state["user"] = cargar_usuarios().query(f'email == "{email_login}"')["nombre"].values[0]
            st.success(f"‚úÖ Bienvenido {st.session_state['user']}")
        else:
            st.error("‚ùå Usuario no registrado. Intenta registrarte.")

# Cierre de sesi√≥n
if st.session_state["user"]:
    if st.button("Cerrar sesi√≥n"):
        st.session_state["user"] = None
        st.session_state["user_email"] = None
        st.success("üîí Sesi√≥n cerrada. Hasta pronto.")
        st.experimental_rerun()
